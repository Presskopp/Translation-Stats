sudo: false
dist: trusty

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
    - master

matrix:
  include:
  - name: "PHP 5.6 / Latest WordPress"
    php: "5.6"
    env: WP_VERSION=latest WP_MULTISITE=0 SNIFF=1
  - name: "PHP 5.6 / Latest WordPress multisite"
    php: "5.6"
    env: WP_VERSION=latest WP_MULTISITE=1 SNIFF=1
  - name: "PHP 7.1 / Latest WordPress"
    php: "7.1"
    env: WP_VERSION=latest WP_MULTISITE=0 SNIFF=1
  - name: "PHP 7.1 / Latest WordPress multisite"
    php: "7.1"
    env: WP_VERSION=latest WP_MULTISITE=1 SNIFF=1
  - name: "PHP 7.2 / Latest WordPress"
    php: "7.2"
    env: WP_VERSION=latest WP_MULTISITE=0 SNIFF=1
  - name: "PHP 7.2 / Latest WordPress multisite"
    php: "7.2"
    env: WP_VERSION=latest WP_MULTISITE=1 SNIFF=1

before_install:
  # Speed up build time by disabling Xdebug.
  # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
  - phpenv config-rm xdebug.ini
  - if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
  - if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=/tmp/sniffs; fi
  # Install PHP_CodeSniffer.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Set install path for WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi

script:
  # Search for PHP syntax errors.
  - find -L . -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
  # Run against WordPress Coding Standards.
  # If the custom ruleset is named `.phpcs.xml`, `phpcs.xml`, `.phpcs.xml.dist` or `phpcs.xml.dist`
  # and, like the travis script, is in the root of the project, you can leave
  # out the `--standard=` part of the command.
  # - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs -p . --standard=WordPress; fi
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs -p . --standard=./phpcs.xml; fi
